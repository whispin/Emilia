name: Rust CF Scan

on:
  workflow_dispatch: # Memungkinkan dijalankan secara manual
  # Workflow dijalankan otomatis tiap 6 jam
  schedule:
    - cron: '0 */6 * * *'  # Setiap 6 jam (00:00, 06:00, 12:00, 18:00 UTC)


jobs:
  update-proxies:
    runs-on: ubuntu-latest
    name: 🔎 Scan Proxy Rust Binary

    steps:
    - name: 📂 Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GIT_TOKEN }}

    - name: 🛠️ Install Rust Toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: 📦 Cache Cargo Dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: 📦 Build Rust Project (Release)
      run: cargo build --release

    - name: 🧪 Give Execute Permission to Binary
      run: chmod +x ./target/release/cekproxy

    - name: 🚀 Run Rust Binary with PostgreSQL Sync
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: |
        echo "═══════════════════════════════════════"
        echo "Starting proxy scanner..."
        echo "PostgreSQL Sync: $([ -n "$DATABASE_URL" ] && echo 'Enabled ✅' || echo 'Disabled ⚠️')"
        echo "═══════════════════════════════════════"
        ./target/release/cekproxy
        echo ""
        echo "═══════════════════════════════════════"
        echo "Scan completed. Check output above for:"
        echo "  ✅ Database ready for sync"
        echo "  ✅ Successfully synced X proxies"
        echo "  ❌ Any error messages"
        echo "═══════════════════════════════════════"

    - name: 📊 Check Scan Results
      run: |
        if [ -f Data/alive.txt ]; then
          PROXY_COUNT=$(wc -l < Data/alive.txt)
          echo "✅ Found $PROXY_COUNT active proxies"
          echo ""
          echo "📋 Sample proxies (first 5):"
          head -5 Data/alive.txt
          echo ""
          echo "📈 Statistics:"
          echo "  Total proxies: $PROXY_COUNT"
          echo "  File size: $(du -h Data/alive.txt | cut -f1)"

          # Country distribution
          if [ "$PROXY_COUNT" -gt 0 ]; then
            echo ""
            echo "🌍 Top 5 countries:"
            cut -d',' -f3 Data/alive.txt | sort | uniq -c | sort -rn | head -5 || true
          fi

          # Database sync status
          if [ -n "${{ secrets.DATABASE_URL }}" ]; then
            echo ""
            echo "💾 Database: Synced ✅"
          else
            echo ""
            echo "💾 Database: Not configured ⚠️"
          fi
        else
          echo "⚠️ No alive.txt file generated"
          exit 1
        fi


